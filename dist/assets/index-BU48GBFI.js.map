{"version":3,"file":"index-BU48GBFI.js","sources":["../../src/components/Dice.vue","../../src/components/DrawWheel.vue","../../src/components/RandomDraw.vue","../../src/components/RandomSort.vue","../../src/views/index.vue"],"sourcesContent":["<script setup lang=\"ts\">\r\nimport {nextTick, ref} from \"vue\";\r\nimport {RefreshRight} from \"@element-plus/icons-vue\";\r\n\r\nconst boxRef = ref<HTMLElement[] | null>(null);\r\nconst isAnimating = ref(false);\r\n\r\nconst piceCount = ref(1);\r\n\r\nconst getNextRotation = () => {\r\n\r\n  // 额外旋转n圈\r\n  // 360和1080都是90的倍数，因此我们找出这个范围内90度倍数的最小值和最大值\r\n  const minAngle = 360; // 或者直接写作 4 * 90，因为360度相当于4个90度\r\n  const maxAngle = 1080; // 同理，1080度是12个90度\r\n  let angleX = random3D(minAngle, maxAngle);\r\n  let angleY = random3D(minAngle, maxAngle);\r\n  let angleZ = random3D(minAngle, maxAngle);\r\n  return {angleX, angleY, angleZ};\r\n};\r\n\r\nfunction random3D(minAngle: number, maxAngle: number) {\r\n  // 计算这个范围内有多少个90度的间隔\r\n  const intervalCount = (maxAngle - minAngle) / 90;\r\n  const randomAngle = minAngle + Math.floor(Math.random() * intervalCount) * 90; // 随机选择一个90度的360-1080之间的倍数\r\n  return randomAngle % 360 === 0 ? randomAngle : -randomAngle;\r\n}\r\n\r\nasync function roll() {\r\n  if (isAnimating.value || !boxRef.value) return;\r\n\r\n  for (let item of boxRef.value) {\r\n    rollDetail(item)\r\n  }\r\n}\r\n\r\nasync function rollDetail(item: HTMLElement) {\r\n  isAnimating.value = true;\r\n\r\n  const {angleX, angleY, angleZ} = getNextRotation();\r\n\r\n  // console.log(rotations[axis].value);\r\n  await nextTick(); // 等待下一帧\r\n  item.style.transition = \"transform 2s ease\";\r\n\r\n  // 应用变换\r\n  item.style.transform = `\r\n    rotateX(${angleX}deg)\r\n    rotateY(${angleY}deg)\r\n    rotateZ(${angleZ}deg)\r\n  `;\r\n  await new Promise((resolve) => setTimeout(resolve, 2000)); // 等待动画结束\r\n  item.style.transition = \"\"; // 移除过渡效果\r\n  isAnimating.value = false; // 动画结束\r\n}\r\n</script>\r\n\r\n<template>\r\n  <section v-for=\"_ in piceCount\">\r\n    <div id=\"box\" ref=\"boxRef\">\r\n      <div id=\"front\" class=\"surface\">\r\n        <div>⚫</div>\r\n      </div>\r\n      <div id=\"top\" class=\"surface\">\r\n        <div>⚫⚫</div>\r\n      </div>\r\n      <div id=\"back\" class=\"surface\">\r\n        <div>⚫⚫⚫</div>\r\n      </div>\r\n      <div id=\"bottom\" class=\"surface\">\r\n        <div>⚫⚫</div>\r\n        <div>⚫⚫</div>\r\n      </div>\r\n      <div id=\"left\" class=\"surface\">\r\n        <div>⚫⚫</div>\r\n        <div>⚫⚫⚫</div>\r\n      </div>\r\n      <div id=\"right\" class=\"surface\">\r\n        <div>⚫⚫⚫</div>\r\n        <div>⚫⚫⚫</div>\r\n      </div>\r\n    </div>\r\n  </section>\r\n\r\n\r\n  <div class=\"flex flex-wrap gap-4 items-center\">\r\n    <el-button @click=\"roll()\" :disabled=\"isAnimating\" type=\"primary\"\r\n    >掷骰子\r\n      <el-icon>\r\n        <RefreshRight/>\r\n      </el-icon>\r\n    </el-button>\r\n    <br/>\r\n    <el-select v-model=\"piceCount\" style=\"width: 80px\">\r\n      <el-option\r\n          v-for=\"val in [1, 2, 3, 4, 5, 6]\"\r\n          :key=\"val\"\r\n          :label=\"val\"\r\n          :value=\"val\"\r\n      />\r\n    </el-select>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n* {\r\n  margin: 0;\r\n  padding: 0;\r\n}\r\n\r\nsection {\r\n  width: 200px;\r\n  height: 200px;\r\n  /* 设置景深 */\r\n  perspective: 10000px;\r\n  margin: 50px auto;\r\n  display: inline-block;\r\n}\r\n\r\n//@keyframes r {\r\n//  from {\r\n//    transform: rotateX(0deg) rotateY(0deg);\r\n//  }\r\n//  to {\r\n//    transform: rotateX(360deg) rotateY(360deg);\r\n//  }\r\n//}\r\n\r\n#box {\r\n  width: 200px;\r\n  height: 200px;\r\n  perspective: 10000px;\r\n  /* 既是p标签的舞台，自己也是section标签的演员 要设置transform-style*/\r\n  transform-style: preserve-3d;\r\n  position: relative;\r\n  animation-play-state: paused;\r\n  /* animation: r 1s linear 0s infinite alternate; */\r\n  .surface {\r\n    width: 200px;\r\n    height: 200px;\r\n    border-radius: 30px;\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n}\r\n\r\n#front {\r\n  border: 2px solid #343a40;\r\n  transform: scale3d(0.5, 0.5, 0.5) translateZ(100px);\r\n  /*background-color: rgba(210, 105, 30, 0.438);*/\r\n  background-color: #fffaf0;\r\n}\r\n\r\n#top {\r\n  border: 2px solid #343a40;\r\n  transform: scale3d(0.5, 0.5, 0.5) rotateX(90deg) translateZ(100px);\r\n  /*background-color: rgba(22, 243, 232, 0.226);*/\r\n  background-color: #fffaf0;\r\n}\r\n\r\n#back {\r\n  border: 2px solid #343a40;\r\n  transform: scale3d(0.5, 0.5, 0.5) translateZ(-100px);\r\n  /*background-color: rgba(13, 104, 241, 0.397);*/\r\n  background-color: #fffaf0;\r\n}\r\n\r\n#bottom {\r\n  border: 2px solid #343a40;\r\n  transform: scale3d(0.5, 0.5, 0.5) rotateX(-90deg) translateZ(100px);\r\n  /*background-color: rgba(124, 238, 17, 0.315);*/\r\n  background-color: #fffaf0;\r\n}\r\n\r\n#left {\r\n  border: 2px solid #343a40;\r\n  transform: scale3d(0.5, 0.5, 0.5) rotateY(-90deg) translateZ(100px);\r\n  /*background-color: rgba(233, 10, 177, 0.432);*/\r\n  background-color: #fffaf0;\r\n}\r\n\r\n#right {\r\n  border: 2px solid #343a40;\r\n  transform: scale3d(0.5, 0.5, 0.5) rotateY(90deg) translateZ(100px);\r\n  /*background-color: rgba(238, 17, 17, 0.438);*/\r\n  background-color: #fffaf0;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { onMounted, reactive, watch, ref } from \"vue\"; // 导入Vue的onMounted生命周期钩子\r\n\r\nlet canvas: HTMLCanvasElement | null = null; // 定义Canvas元素变量\r\nlet ctx: CanvasRenderingContext2D | null = null; // 定义2D上下文变量\r\nlet rotating = ref(false); // 标志位，表示是否正在旋转\r\nlet randomNumber: number = parseFloat((0.5 + Math.random()).toFixed(2)); // 随机数\r\nconst dpr = window.devicePixelRatio; // 获取设备像素比\r\nlet centerX: number; // 定义圆心X坐标变量\r\nlet centerY: number; // 定义圆心Y坐标变量\r\nlet rotateTimer: NodeJS.Timeout | null = null; // 定义定时器变量\r\nlet rotateTime: number = 3000 * randomNumber; // 旋转时间\r\nlet rotationAngle: number = 0;\r\nlet divideContentList = reactive([\r\n  \"1\",\r\n  \"2\",\r\n  \"3\",\r\n  \"4\",\r\n  \"5\",\r\n  \"6\",\r\n  \"7\",\r\n  \"8\",\r\n  \"9\",\r\n  \"10\",\r\n  \"11\",\r\n  \"12\",\r\n]);\r\nconst colorArray = reactive<string[]>(\r\n  divideContentList.map(() => randomLightColor())\r\n);\r\n\r\nonMounted(() => {\r\n  // 获取 Canvas 元素和 2D 上下文\r\n  canvas = document.getElementById(\"clockCanvas\") as HTMLCanvasElement; // 获取Canvas元素\r\n  if (canvas) {\r\n    ctx = canvas.getContext(\"2d\"); // 获取2D上下文\r\n\r\n    if (ctx) {\r\n      //此段代码是为了让canvas更清晰\r\n      const { width, height } = canvas;\r\n      canvas.width = Math.round(width * dpr);\r\n      canvas.height = Math.round(height * dpr);\r\n      canvas.style.width = width + \"px\";\r\n      canvas.style.height = height + \"px\";\r\n      ctx.scale(dpr, dpr);\r\n\r\n      centerX = canvas.width / (2 * dpr); // 计算圆心X坐标\r\n      centerY = canvas.height / (2 * dpr); // 计算圆心Y坐标\r\n      ctx.translate(centerX, centerY); // 平移至圆心\r\n      drawClock(); // 如果成功获取到2D上下文，则绘制\r\n\r\n    }\r\n  }\r\n});\r\n\r\n// 初始绘制整个时钟\r\nfunction drawClock(): void {\r\n  if (!canvas || !ctx) return; // 如果Canvas元素或2D上下文不存在，则返回\r\n\r\n  drawClockFace(0, 0); // 绘制的外圆\r\n  fillColorSectors(0, 0); // 填充颜色\r\n  drawClockNumbers(0, 0); // 绘制的数字\r\n  // 请求下一帧动画\r\n  // requestAnimationFrame(drawClock);\r\n}\r\n\r\n\r\n// 绘制背景圆\r\nfunction drawClockFace(centerX: number, centerY: number): void {\r\n  if (!ctx) return; // 如果2D上下文不存在，则返回\r\n\r\n  ctx.beginPath(); // 开始路径\r\n  ctx.arc(centerX, centerY, 240, 0, Math.PI * 2); // 绘制圆形\r\n  ctx.lineWidth = 2; // 设置线宽\r\n  ctx.strokeStyle = \"#000\"; // 设置描边颜色\r\n  ctx.stroke(); // 绘制描边\r\n  ctx.closePath(); // 结束路径\r\n\r\n}\r\n\r\n\r\n// 绘制数字\r\nfunction drawClockNumbers(centerX: number, centerY: number): void {\r\n  if (!ctx) return;\r\n\r\n  const radius = 200; // 数字的半径距离，相对于圆心\r\n  const fontSize = 30 * dpr; // 数字的字体大小\r\n  \r\n  let angleIncrement = (Math.PI * 2) / divideContentList.length;// 每份的角度\r\n  ctx.font = `${fontSize}px Arial`; // 设置字体样式\r\n  ctx.fillStyle = \"black\";\r\n  ctx.textBaseline = \"middle\"; // 文字垂直居中\r\n  ctx.textAlign = \"center\"; // 文字水平居中\r\n\r\n  for (let i = 0; i < divideContentList.length; i++) {\r\n\r\n    const startAngle = angleIncrement * i;\r\n    const endAngle = angleIncrement * (i + 1);\r\n    const angleForText = (startAngle + endAngle) / 2; // 文字居中显示的角度\r\n    const x = centerX + radius  * Math.cos(angleForText);\r\n    const y = centerY + radius  * Math.sin(angleForText);\r\n\r\n    ctx.fillText(divideContentList[i], x, y); // 绘制数字\r\n  }\r\n\r\n}\r\n// 返回随机浅色调颜色\r\nfunction randomLightColor(): string {\r\n\r\n  const fixedLightColors: string[] = [\r\n  'rgb(238,231,205)', // 陶土色\r\n  '#C586C0', // 浅珊瑚色\r\n  'rgb(147,112,219)', // 浅紫罗兰色\r\n  'rgb(255,160,122)', // 浅橙色\r\n  'rgb(148,255,148)', // 浅绿色\r\n  '#FEE082', // 浅黄色\r\n  \"skyblue\",// 浅蓝色\r\n  ];\r\n  const randomIndex = Math.floor(Math.random() * fixedLightColors.length);\r\n  console.log(randomIndex)\r\n  return fixedLightColors[randomIndex];\r\n}\r\n\r\n// 填充颜色\r\nfunction fillColorSectors(centerX: number, centerY: number): void {\r\n  if (!ctx) return;\r\n\r\n  let angleI = (Math.PI * 2) / divideContentList.length;\r\n  \r\n  for (let i = 0; i < divideContentList.length; i++) {\r\n    const beginAngle = angleI * i;\r\n    const nextAngle = angleI * (i + 1);\r\n    ctx.beginPath();\r\n    ctx.arc(centerX, centerY, 240, beginAngle, nextAngle); // 绘制扇形\r\n    ctx.lineTo(centerX, centerY);\r\n    ctx.fillStyle = colorArray[i]; // 使用固定颜色数组中的颜色\r\n    ctx.fill();\r\n    ctx.closePath();\r\n  }\r\n}\r\n\r\n// 监听数组变化  重绘\r\nwatch(divideContentList, () => {\r\n  ctx?.clearRect(-centerX, -centerY, canvas!.width, canvas!.height); // 清空画布\r\n  drawClock();\r\n});\r\n\r\n// 添加数据\r\nfunction addData() {\r\n  divideContentList.push(\"新增\");\r\n  colorArray.push(randomLightColor())\r\n}\r\n// 重置\r\nfunction redraw() {\r\n  ctx?.clearRect(-centerX, -centerY, canvas!.width, canvas!.height); // 清空画布\r\n  ctx?.rotate(-rotationAngle); // 旋转到初始状态\r\n  rotationAngle = 0;\r\n  drawClock();\r\n}\r\n\r\n// 旋转\r\nfunction rotateCircular() {\r\n  // console.log(divideContentList);\r\n  if (!canvas || !ctx) return; // 如果Canvas元素或2D上下文不存在，则返回\r\n  ctx?.save();\r\n  randomNumber = parseFloat((0.5 + Math.random()).toFixed(2));\r\n  // console.log(randomNumber);\r\n  const accelerationTime: number = rotateTime / 5; // 加速时间\r\n  const decelerationTime: number = accelerationTime; // 减速时间\r\n  let alRotatedTime: number = 0; // 旋转时间\r\n  let rotationSpeed: number = 0.01 * randomNumber; // 旋转速度\r\n\r\n  if (!rotating.value) {\r\n    rotating.value = true; // 开始旋转\r\n\r\n    rotateTimer = setInterval(() => {\r\n      ctx?.clearRect(-centerX, -centerY, canvas!.width, canvas!.height); // 清空画布\r\n      alRotatedTime += 16; // 旋转时间累加\r\n      // console.log(\"时间\", alRotatedTime, \"速度\", rotationSpeed);\r\n      if (alRotatedTime < accelerationTime) {\r\n        // 如果加速时间未到，则加速\r\n        // console.log(\"加速\");\r\n        rotationSpeed += 0.002;\r\n      } else if (alRotatedTime > decelerationTime || rotationSpeed > 0.3) {\r\n        // 如果加速时间已到，则减速\r\n        // console.log(\"减速\");\r\n        rotationSpeed >= 0 ? (rotationSpeed -= 0.0005) : \"\"; // 防止速度为负\r\n      }\r\n      drawClock(); // 绘制\r\n      ctx?.rotate(rotationSpeed * Math.PI);\r\n      rotationAngle += rotationSpeed * Math.PI;\r\n    }, 16); // 每16毫秒旋转一次\r\n    setTimeout(() => {\r\n      clearInterval(rotateTimer!); // 停止旋转\r\n      rotating.value = false; // 标志位重置\r\n    }, rotateTime); // 旋转n秒后停止\r\n  }\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"turnMain\">\r\n    <div class=\"turnContent\">\r\n      <canvas id=\"clockCanvas\" width=\"500\" height=\"500\"></canvas>\r\n      <el-button type=\"primary\" @click=\"rotateCircular\">旋转</el-button>\r\n      <el-button :disabled=\"rotating\" @click=\"redraw\">重置</el-button>\r\n      <div class=\"result\"></div>\r\n    </div>\r\n    <div class=\"control\">\r\n      <div\r\n        class=\"controlItem\"\r\n        v-for=\"(item, index) in divideContentList\"\r\n        :key=\"index\"\r\n      >\r\n        <input\r\n          type=\"text\"\r\n          :value=\"item\"\r\n          @input=\"\r\n            (e) => {\r\n              divideContentList[index] = (e.target as HTMLInputElement).value;\r\n            }\r\n          \"\r\n        />\r\n        <div class=\"deleteItem\" @click=\"divideContentList.splice(index, 1)\">\r\n          删除\r\n        </div>\r\n      </div>\r\n      <el-button :disabled=\"rotating\" @click=\"addData\">新增</el-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.turnMain {\r\n  display: flex;\r\n  justify-content: center;\r\n}\r\n\r\n.turnContent {\r\n  position: relative;\r\n  width: 500px;\r\n\r\n  canvas {\r\n    border: 1px solid #000;\r\n  }\r\n\r\n  .result {\r\n    position: absolute;\r\n    content: \"\";\r\n    width: 0;\r\n    height: 0;\r\n    border-top: 10px solid transparent;\r\n    border-bottom: 10px solid transparent;\r\n    border-right: 35px solid #5ddf61; /* 箭头颜色 */\r\n    z-index: 5;\r\n    top: 238px;\r\n    right: 0;\r\n  }\r\n}\r\n\r\n.control {\r\n  width: 200px;\r\n  margin-left: 50px;\r\n  border: 1px solid #000;\r\n  padding: 5px;\r\n\r\n  .controlItem {\r\n    display: flex;\r\n    padding-bottom: 5px;\r\n    position: relative;\r\n\r\n    .deleteItem {\r\n      display: none; /* 默认隐藏删除按钮 */\r\n      position: absolute; /* 绝对定位使按钮位于控件项内部 */\r\n      top: 0; /* 调整按钮位置 */\r\n      right: 0; /* 使其靠右显示 */\r\n      background-color: #fe2416; /* 示例背景色 */\r\n      color: white; /* 文本颜色 */\r\n      padding: 0 5px; /* 内边距 */\r\n      cursor: pointer;\r\n      font-size: 14px;\r\n      line-height: 18px;\r\n      border-radius: 5px;\r\n    }\r\n  }\r\n\r\n  .controlItem:hover .deleteItem {\r\n    display: block;\r\n  }\r\n\r\n  .controlItem:hover input {\r\n    background-color: #e8e8e8;\r\n  }\r\n\r\n  input {\r\n    flex: 1;\r\n    width: 100%;\r\n    outline: none;\r\n    border: none;\r\n    padding: 0;\r\n    font-size: 18px;\r\n  }\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { ref } from \"vue\";\r\nimport { ElMessage, ElMessageBox } from \"element-plus\";\r\nimport { formatTime, KnuthShuffle } from \"@/assets/ts/utils.ts\";\r\n\r\nconst colors = [\r\n  \"#F0E68C\",\r\n  \"#ADD8E6\",\r\n  \"#F0FFF0\",\r\n  \"#D3D3D3\",\r\n  \"#FFB6C1\",\r\n  \"#E0FFFF\",\r\n  \"#EEE8AA\",\r\n  \"#DB7093\",\r\n  \"#FAFAD2\",\r\n  \"#CD5C5C\",\r\n];\r\nconst startText = ref(\"开始\"); // 开始按钮文字\r\nconst title = ref(\"随机抽签器\"); // 标题\r\nconst isActive = ref(false); // 抽签器开关\r\nconst textarea = ref(\"1\\n2\\n3\\n4\\n5\\n6\\n7\\n8\\n9\\n10\\n11\\n12\\n13\\n14\\n15\"); // 默认值\r\n\r\ninterface RuleClassify {\r\n  content: string;\r\n  open: boolean;\r\n}\r\n\r\nconst classify = ref<RuleClassify[]>([]);\r\nconst loading = ref(false);\r\n\r\nfunction begin() {\r\n  classify.value = []; // 清空抽签器\r\n  tableData.value = []; // 清空计数列表\r\n  isActive.value = true; // 打开抽签器\r\n  loading.value = true; // 开始洗牌\r\n  startText.value = \"重新开始\";\r\n  textarea.value.split(\"\\n\").map((item) => {\r\n    classify.value.push({ content: item, open: false });\r\n  });\r\n  KnuthShuffle(classify.value);\r\n  setTimeout(() => {\r\n    loading.value = false; // 结束洗牌\r\n  }, 2000);\r\n}\r\n\r\ninterface RuleTableData {\r\n  content: string;\r\n  date: string;\r\n}\r\n\r\nconst tableData = ref<RuleTableData[]>([]); // 抽签器数据\r\nfunction pushTableData(item: RuleClassify) {\r\n  if (!item.open) {\r\n    item.open = true; // 打开卡牌结果\r\n    tableData.value.push({\r\n      content: item.content,\r\n      date: formatTime(new Date()),\r\n    });\r\n  }\r\n}\r\n\r\nfunction getAllCard() {\r\n  classify.value.map((item) => {\r\n    item.open = true;\r\n  });\r\n}\r\n\r\nfunction updateTitle() {\r\n  ElMessageBox.prompt(\"请输入抽签标题\", \"提示\", {\r\n    confirmButtonText: \"确定\",\r\n    cancelButtonText: \"取消\",\r\n    inputPattern: /^[\\s\\S]*.*[^\\s][\\s\\S]*$/,\r\n    inputErrorMessage: \"标题不能为空\",\r\n  })\r\n    .then(({ value }) => {\r\n      title.value = value;\r\n      ElMessage.success(\"标题修改成功\");\r\n    })\r\n    .catch(() => {\r\n      ElMessage.info(\"取消修改\");\r\n    });\r\n}\r\n</script>\r\n\r\n<template>\r\n  <el-container style=\"flex-flow: wrap\">\r\n    <el-aside width=\"900px\">\r\n      <h2>{{ title }}</h2>\r\n      <template v-if=\"isActive\">\r\n        <div\r\n          class=\"cardZ\"\r\n          v-loading=\"loading\"\r\n          element-loading-text=\"洗牌中...\"\r\n          element-loading-background=\"rgba(122, 122, 122, 0.8)\"\r\n        >\r\n          <div\r\n            class=\"cardZItem\"\r\n            :style=\"{ 'background-color': colors[index % colors.length] }\"\r\n            v-for=\"(item, index) in classify\"\r\n            @click=\"pushTableData(item)\"\r\n          >\r\n            <span v-if=\"item.open\">{{ item.content }}</span>\r\n          </div>\r\n        </div>\r\n      </template>\r\n\r\n      <template v-else>\r\n        <el-input\r\n          class=\"textareaStyle\"\r\n          v-model=\"textarea\"\r\n          :rows=\"8\"\r\n          type=\"textarea\"\r\n          placeholder=\"请输入抽签内容,每项以换行分隔\"\r\n        />\r\n      </template>\r\n    </el-aside>\r\n    <el-main style=\"width: 500px\">\r\n      <div>\r\n        <p>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;本系统采用Fisher-Yates(Knuth shuffle)随机排序法，确保每位用户都能得到公正的结果。只需简单地每行输入一个项目，即每个项目占一行。一旦点击“开始”，你的输入将会变为卡片形式，并随即进行混洗和翻转，增添趣味性。而且，为了让游戏更加个性化，你可以自由编辑卡片标题。但请注意，我们恳请各位保持诚实，不要尝试通过邮件要求特殊优待哦！\r\n        </p>\r\n        <p>\r\n          &nbsp;&nbsp;&nbsp;&nbsp;请确保你的行为符合当地的法律法规，任何违规操作的责任将由用户自行承担。此外，本页面所提供的服务是“现状”提供的，没有任何形式的保证，无论明示或暗示。让我们一起享受公平且愉快的体验吧！\r\n        </p>\r\n      </div>\r\n      <div>\r\n        <el-button type=\"primary\" @click=\"begin()\" size=\"large\">{{\r\n          startText\r\n        }}</el-button>\r\n        <el-button @click=\"getAllCard()\" size=\"large\">显示全部</el-button>\r\n      </div>\r\n      <div>\r\n        <el-button @click=\"isActive = false\" size=\"large\">编辑</el-button>\r\n        <el-button @click=\"updateTitle()\" size=\"large\">修改标题</el-button>\r\n      </div>\r\n    </el-main>\r\n  </el-container>\r\n\r\n  <el-table :data=\"tableData\" style=\"width: 100%\" border empty-text=\"暂无数据\">\r\n    <el-table-column type=\"index\" label=\"序列\" align=\"center\" width=\"80\" />\r\n    <el-table-column prop=\"content\" label=\"结果\" align=\"center\" />\r\n    <el-table-column prop=\"date\" label=\"时间\" align=\"center\" />\r\n  </el-table>\r\n</template>\r\n\r\n<style scoped>\r\n.cardZ {\r\n  display: grid;\r\n  justify-content: space-between;\r\n  grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\r\n}\r\n.cardZItem {\r\n  width: 280px;\r\n  height: 80px;\r\n  text-align: center;\r\n  line-height: 80px;\r\n  margin: 5px;\r\n  font-size: 32px;\r\n  font-weight: bolder;\r\n}\r\n.el-aside {\r\n  overflow: hidden;\r\n}\r\n\r\n.textareaStyle {\r\n  font-size: 32px;\r\n  font-weight: bolder;\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport { ref } from \"vue\";\r\nimport { KnuthShuffle } from \"@/assets/ts/utils.ts\";\r\n\r\nconst textarea = ref();\r\nconst loading = ref(false);\r\nconst origin = ref(\"\");\r\nfunction begin() {\r\n  loading.value = true; // 开始洗牌\r\n  origin.value = textarea.value;\r\n  let tempArray: string[] = [];\r\n  tempArray = textarea.value.split(\"\\n\");\r\n  KnuthShuffle(tempArray);\r\n  textarea.value = \"\";\r\n  setTimeout(() => {\r\n    tempArray.map((item, idx) => {\r\n      textarea.value += item;\r\n      if (idx < tempArray.length - 1) {\r\n        textarea.value += \"\\n\";\r\n      }\r\n    });\r\n    loading.value = false; // 结束洗牌\r\n  }, 2000);\r\n}\r\n\r\nfunction reset() {\r\n  textarea.value = origin.value;\r\n}\r\n</script>\r\n\r\n<template>\r\n  <div class=\"randomSortMain\">\r\n    <h2>随机排序</h2>\r\n    <el-input\r\n      v-model=\"textarea\"\r\n      style=\"width: 240px\"\r\n      v-loading=\"loading\"\r\n      element-loading-text=\"排序中...\"\r\n      element-loading-background=\"rgba(122, 122, 122, 0.8)\"\r\n      :rows=\"8\"\r\n      type=\"textarea\"\r\n      placeholder=\"请输入排序内容,每项以换行分隔\"\r\n    >\r\n    </el-input>\r\n\r\n    <el-button style=\"margin-left: 10px\" @click=\"begin()\" type=\"primary\">随机化</el-button>\r\n    <el-button @click=\"reset()\">复原</el-button>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.randomSortMain {\r\n  min-height: 400px;\r\n  .el-textarea {\r\n    width: 450px !important;\r\n    height: 400px !important;\r\n    text-align: center;\r\n    line-height: 80px;\r\n    margin: 5px;\r\n    font-size: 32px;\r\n    font-weight: bolder;\r\n    :v-deep .el-textarea__inner {\r\n      height: 100%;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","<script setup lang=\"ts\">\r\nimport {onBeforeMount, onMounted, ref, shallowRef} from \"vue\";\r\nimport Dice from \"@/components/Dice.vue\";\r\nimport DrawWheel from \"@/components/DrawWheel.vue\";\r\nimport RandomDraw from \"@/components/RandomDraw.vue\";\r\nimport RandomSort from \"@/components/RandomSort.vue\";\r\n\r\nconst currentApply = shallowRef(DrawWheel)\r\nconst applyMap = new Map()\r\n\r\nconst curIdx = ref(0)\r\n\r\nasync function initData() {\r\n  applyMap.set('随机轮盘', DrawWheel);\r\n  applyMap.set('随机抽签器', RandomDraw);\r\n  applyMap.set('骰子', Dice);\r\n  applyMap.set('随机排序', RandomSort);\r\n}\r\nfunction changeApply(idx: number, applyName: string) {\r\n  curIdx.value = idx\r\n  currentApply.value = applyMap.get(applyName)\r\n}\r\n\r\nonBeforeMount(() => {\r\n  initData()\r\n})\r\n\r\nonMounted(() => {\r\n})\r\n</script>\r\n\r\n<template>\r\n  <div class=\"common-layout\">\r\n    <el-container>\r\n      <el-header class=\"headerTop\">\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"6\" v-for=\"(applyName,index) in applyMap.keys()\"\r\n                  :key=\"index\">\r\n            <text :class=\"[curIdx == index?'textActive':'']\" @click=\"changeApply(index, applyName)\">\r\n              {{ applyName }}\r\n            </text>\r\n          </el-col>\r\n        </el-row>\r\n      </el-header>\r\n      <el-main>\r\n        <component :is=\"currentApply\"></component>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"scss\">\r\n.headerTop {\r\n  height: 50px;\r\n  background-color: #343a40;\r\n  line-height: 50px;\r\n\r\n  .el-col {\r\n    text {\r\n      user-select: none;\r\n      cursor: pointer;\r\n      color: #9a9481;\r\n    }\r\n\r\n    .textActive {\r\n      color: #f9f9f9;\r\n    }\r\n\r\n  }\r\n}\r\n</style>\r\n"],"names":["boxRef","ref","isAnimating","piceCount","getNextRotation","angleX","random3D","angleY","angleZ","minAngle","maxAngle","intervalCount","randomAngle","roll","item","rollDetail","nextTick","resolve","canvas","ctx","rotating","randomNumber","dpr","centerX","centerY","rotateTimer","rotateTime","rotationAngle","divideContentList","reactive","colorArray","randomLightColor","onMounted","width","height","drawClock","drawClockFace","fillColorSectors","drawClockNumbers","radius","fontSize","angleIncrement","i","startAngle","endAngle","angleForText","x","y","fixedLightColors","randomIndex","angleI","beginAngle","nextAngle","watch","addData","redraw","rotateCircular","accelerationTime","decelerationTime","alRotatedTime","rotationSpeed","colors","startText","title","isActive","textarea","classify","loading","begin","tableData","KnuthShuffle","pushTableData","formatTime","getAllCard","updateTitle","ElMessageBox","value","ElMessage","origin","tempArray","idx","reset","currentApply","shallowRef","DrawWheel","applyMap","curIdx","initData","RandomDraw","Dice","RandomSort","changeApply","applyName","onBeforeMount"],"mappings":"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"}